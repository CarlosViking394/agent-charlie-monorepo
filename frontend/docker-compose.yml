version: '3.8'

services:
  # Frontend React App
  frontend:
    build: .
    ports:
      - "80:80"
    depends_on:
      - backend
    environment:
      - NODE_ENV=production
    networks:
      - agent-charlie-network

  # Backend API (assuming you have it in ../agent-charlie-backend)
  backend:
    build: 
      context: ../agent-charlie-backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DB_HOST=database
      - DB_PORT=5432
      - DB_NAME=agent_charlie
      - DB_USER=postgres
      - DB_PASS=password
    depends_on:
      - database
      - redis
    networks:
      - agent-charlie-network
    volumes:
      - backend-logs:/app/logs

  # Database
  database:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=agent_charlie
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - agent-charlie-network

  # Redis for caching/sessions
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - agent-charlie-network

  # n8n for workflow automation (optional)
  n8n:
    image: docker.n8n.io/n8nio/n8n
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=password
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - WEBHOOK_URL=http://localhost:5678/
    volumes:
      - n8n-data:/home/node/.n8n
    networks:
      - agent-charlie-network

networks:
  agent-charlie-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  n8n-data:
  backend-logs: